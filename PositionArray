/**
 * Creates a position 2d array based on a 800 by 800 pixel
 * @author cleme
 *
 */
public class PositionArray {
	int[][] array; // the actual 2d position array
	
	/**
	 * Position class constructor that instantiates the array
	 * @param x x axis size
	 * @param y y axis size
	 */
	public PositionArray(int x, int y) {
		array = new int[x][y];
		
		//clears the array during construction
		for (int i = 0; i<x; i++) {
			for(int j= 0; j<y; j++) {
				array[i][j] = 0;
			}
		}
	}
	
	/**
	 * sets the position array to a certain "state"
	 * @param x x axis
	 * @param y y axis
	 * @param state 0 - not occupied 1- occupied by snake 2- occupied by head snake 3- occupied by tail snake
	 */
	public void setPositionState(int x, int y, int state) {
		array[x][y] = state;
	}
	
	
	/**
	 * checks the position if there is or isnt a snake at a certain position
	 * @param x
	 * @param y
	 * @return whether there is a snake there or not
	 */
	public Boolean isthereSnake(int x, int y) {
		Boolean state = null;
		if (array[x][y] == 0) { //snake isnt there
			state = false;
		}else { // there is a snake
			state = true; 
		}
		return state;
	}
	
	/**
	 * checks if the position contains a head snake or not
	 * @param x
	 * @param y
	 * @return whether or not the head snake is there
	 */
	public Boolean isthereHeadSnake(int x, int y) {
		Boolean state = null;
		if (array[x][y] == 2) { //there is a head snake
			state = true;
		}else {
			state = false;
		}
		return state;
	}
	
	/**
	 * checks if the position contains a tail snake
	 * @param x
	 * @param y
	 * @return whether or not there is a tail snake at said position
	 */
	public Boolean isthereTailSnake(int x, int y) {
		Boolean state = null;
		if (array[x][y] == 3) { //there is a head snake
			state = true;
		}else {
			state = false;
		}
		return state;
	}
	
	/**
	 * gets the number that is occupied at a certain 2d index
	 * @param x first index 
	 * @param y second index
	 * @return the number occupying the array at index [x][y]
	 */
	public int getPositionState(int x, int y) {
		int state = array[x][y];
		return state;
	}
}
