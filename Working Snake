import java.util.ArrayList;
import java.util.TimerTask;
import java.util.Timer;

import java.awt.Label;

/**
 * the class that handles the calculation for the each of the individual snake units
 * @author cleme
 *
 */
public class Snake {

    /**
     * Creating objects
     */
    private GUI theInterface;
    

    String Direction = "east";

    int size;

    Label snake = new Label();

    Label food = new Label();


    ArrayList<Label> snakes = new ArrayList<>();
    


    /**
     * Constructor
     *
     * @param theInterface
     */
    public Snake(GUI theInterface) {

        this.theInterface = theInterface;

    }


    /**
     * Runs program
     */
    public void run(){

            Timer tick = new Timer();

            TimerTask task = new TimerTask() {
                @Override
                public void run() {



                    /**
                     * Gets entire array list of snakes from GUI
                     */
                    snakes = theInterface.returnSnake();

                    food = theInterface.returnFood();

                    if(snakes.get(0).getX() == food.getX() && snakes.get(0).getY() == food.getY()){

                        theInterface.updateFoodPosition();
                        

                    }

                    /**
                     * Iterates through entire array list
                     */
                    for (int i = 0; i < snakes.size(); i++ ) {

                        Direction = theInterface.getDirection();

                        /**
                         * snake becomes the ith label in snakes
                         */
                        snake = snakes.get(i);

                        /**
                         * resets the position of snake
                         */
                        snake = theInterface.updateSnakePosition(snake.getX(), snake.getY(),Direction, snake);

                        /**
                         * resets snake(i)
                         */
                        snakes.set(i, snake);


                    }


                }

            };

            /**
             * Controls tick intervals and delay
             */
            tick.scheduleAtFixedRate(task,100,100);

    }



}
